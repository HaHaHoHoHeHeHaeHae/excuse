<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	<authentication-manager>
	
		
		<authentication-provider ref="authenticator" />
		
	</authentication-manager>


	 
	<beans:bean id="authenticator"
				class="com.blood.coding.security.CustomAuthentication"
				p:memberService-ref="memberService"
				/>
	
	<http use-expressions="true" pattern="/**" >
		<access-denied-handler error-page="/security/accessDenied"/>
		<intercept-url pattern="/**" access="permitAll"/>
		
		<form-login
			login-page="/common/login"
			login-processing-url="/common/loginPost"
			username-parameter="mem_id"
			password-parameter="mem_pwd"
			authentication-success-handler-ref="loginSuccessHandler"
			authentication-failure-handler-ref="loginFailureHandler"
		/>
		<logout
			logout-url="/logout"
			invalidate-session="true"
			logout-success-url="/login"
			delete-cookies="JSESSIONID"
		/>
		
		<session-management invalid-session-url="/common/login">
			<concurrency-control
				expired-url="/login"
				max-sessions="1"
				session-registry-ref="sessionRegistry"
				/>
		</session-management>
		
	
	</http>
	
	<beans:bean id="sessionRegistry"
				class="org.springframework.security.core.session.SessionRegistryImpl"
				/>
	
	<beans:bean id="loginSuccessHandler"
				class="com.blood.coding.security.LoginSuccessHandler"
				p:defaultTargetUrl="/main/test"
				/>
				
	<beans:bean id="loginFailureHandler"
				class="com.blood.coding.security.LoginFailureHandler"
				p:defaultFailureUrl="/login"
				/>
				
	
</beans:beans>

